axios

  github:https://github.com/axios/axios
  中文：https://www.kancloud.cn/yunye/axios/234845

  1.安装
  npm install axios

  2.引入加载
  在main.js文件中引入
  import axios from 'axios'
  //原型绑定axios   ,这里用$axios
  Vue.prototype.$axios = axios

  3.请求
  在组件中的 default模块的created 函数中使用 axios
    get请求
  示例：
  export default {
    name: 'HelloWorld',
    data () {
      return {
        msg: 'Welcome to Your Vue.js App',
        newsData:[]
      }
    },
    created(){
      // this.$axios("http://www.wwtliu.com/sxtstu/blueberrypai/getIndexBanner.php")
      // this.$axios.get("http://www.wwtliu.com/sxtstu/news/juhenews.php?type=junshi&count=30")
      this.$axios.get("http://www.wwtliu.com/sxtstu/news/juhenews.php",{
        params:{
          type:"junshi",
          count:30
        }
      })
        .then(res =>{
          this.newsData = res.data.result.data;
          console.log(res);
        })
        .catch(function(error){
          console.log(error);
        })
    }
  }

    post请求
      form-data格式：
        ?name=iwen&age=20
      x-www-form-urlencoded格式：
        {name:'iwen',age:20}
       注意：axios接受的post请求参数格式是form-data格式

     可在当前组件中导入qs
     import qs from 'qs'

     export default {
       name: "Posts",
       data() {
         return {}
       },
       created(){
         this.$axios.post('http://www.wwtliu.com/sxtstu/blueberrypai/login.php', qs.stringify({
           user_id:'iwen@qq.com',
           password:'iwen123',
           verification_code:'crfvw'
         }))
           .then(function (res) {
             console.log(res);
           })
           .catch(error =>{
             console.log(error);
           })
       }

     }

    4.拦截器：
    在main.js中使用
    import axios from 'axios'
    Vue.prototype.$axios = axios

    //拦截器
    // Add a request interceptor
    axios.interceptors.request.use(function (config) {
      // Do something before request is sent
      config.data = qs.stringify(config.data )          //对数据进行格式化成form-data
      return config;
    }, function (error) {
      // Do something with request error
      return Promise.reject(error);
    });

    // Add a response interceptor
    axios.interceptors.response.use(function (response) {
      // Do something with response data
      return response;
    }, function (error) {
      // Do something with response error
      return Promise.reject(error);
    });

  5.配置全局默属性
  在main.js文件中配置
  下面这些不一定要一起出现，可以只配置一个，两个
  axios.defaults.baseURL = 'https://api.example.com';       //axios调用的基础URL
  axios.defaults.headers.common['Authorization'] = AUTH_TOKEN;      //token
  axios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';    //主机头


  6.跨域
    注意：这种方法只适用于测试，因为打包的时候不具备服务器功能。
    config/index.js文件中配置反向代理
    proxyTable: {
          '/api':{
            //目标：指向目标请求地址
            target: 'http://api.douban.com',
            //webpack的属性，映射一个host
            changeOrigin:true,
            pathRewrite:{
              '^/api':''
            }
          }
        }

     main.js文件中配置HOST
      Vue.prototype.HOST = '/api'

     然后在组件中组合URL， 使用 this.HOST + 'url'
          //原本的URL为： http://api.douban.com/v2/movie/top250
           const url = this.HOST + '/v2/movie/top250'         //console.log(url)    结果：/api/v2/movie/top250
             console.log(url);
           this.$axios.get(url,)
             .then(function (res) {
               console.log(res.data);
             })
             .catch(error =>{
               console.log(error);
             })
    7.mock数据模拟
      1.自己创建json文件。使用get请求形式访问数据
        优点：方便、快捷
        缺点：只能存在get请求
      2.项目集成服务器，模拟各种接口
        优点：模拟真实线上环境
        缺点：增加开发成本
      3.直接使用线上数据
        优点：真实
        缺点：不一定每个项目都存在
      4.数据模拟库
        http://www.mockjs.com
